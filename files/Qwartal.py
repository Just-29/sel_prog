import os
import time

from datetime import datetime
from pathlib import Path
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver import Keys

from config import *


# –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chrome –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
os.system('taskkill /f /im chrome.exe 2>nul')
os.system('taskkill /f /im chromedriver.exe 2>nul')
time.sleep(2)

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ webdriver-manager
os.environ['WDM_LOG_LEVEL'] = '0'

chrome_options = Options()
chrome_options.binary_location = CHROME_PATH

# –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
chrome_options.add_argument(f"--user-data-dir={CHROME_PROFILE_PATH}")
chrome_options.add_argument("--profile-directory=Default")

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
chrome_options.add_argument("--log-level=0")
chrome_options.add_argument("--disable-logging")
chrome_options.add_experimental_option("excludeSwitches", ["enable-logging"])

service = Service(
    executable_path=DRIVER_PATH,
    log_path='NUL'  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏ ChromeDriver –≤ –Ω–∏–∫—É–¥–∞
)

driver = webdriver.Chrome(service=service, options=chrome_options)

wait = WebDriverWait(driver, 300, poll_frequency=1)

script_dir = Path(__file__).parent
file_path = os.path.join(script_dir, "uploads", PDF_FILE_NAME)
file_signature = os.path.join(script_dir, "uploads", SIGNATURE_FILE_NAME)
uploads_file_dir = script_dir / "uploads" / "qwartal_files.txt"

def save_selenium_note(driver, message, screenshot=False):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–º–µ—Ç–∫—É –¥–ª—è Selenium —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"""
    notes_dir = Path(__file__).parent / "selenium_notes"
    notes_dir.mkdir(exist_ok=True)
    
    note_file = notes_dir / "qwartal.log"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    with open(note_file, 'a', encoding='utf-8') as f:
        f.write(f"[{timestamp}] {message}\n")

def login_funct(driver):
    wait = WebDriverWait(driver, 5)
    driver.get("https://lk.rosreestr.ru/my-applications")
    try:
        if wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ']"))):
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –≠–ª. –ø–æ–¥–ø–∏—Å—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[contains(., '–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê')]"))).click()
            print("\n", "\t", "–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ö–•")
            time.sleep(10)
            wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
            print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            time.sleep(5)
    except:
        driver.get("https://lk.rosreestr.ru/my-applications")
        print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–æ—Å—Ä–µ–µ—Å—Ç—Ä–∞")
        wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
        print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        time.sleep(5)

login_funct(driver)

# –ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ qwartal_files
txt_file = script_dir / "uploads" / "qwartal_files.txt"
if txt_file.is_file():
    with open(txt_file, 'r', encoding='utf-8') as file:
        lines = [line.strip() for line in file if line.strip() and not line.strip().startswith('#')]
        for line in lines:

            print(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ {line}")

            driver.get("https://lk.rosreestr.ru/eservices/request-info-from-egrn/cpt")
            print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ –ø–æ –ï–ì–†–ù")
            time.sleep(10)

            # –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            scroll_category = driver.find_element("xpath", "//input[@id='applicantCategory']")
            scroll_category.send_keys("–ò–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º")
            time.sleep(1)
            scroll_category.send_keys(Keys.ARROW_DOWN)
            time.sleep(1)
            scroll_category.send_keys(Keys.ENTER)
            time.sleep(1)

            # –í–≤–æ–¥ –¥–∞—Ç—ã
            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].regDate']").send_keys(DOCUMENT_DATE)
            print("\n", "\t", "–≤–≤–æ–¥ –¥–∞—Ç—ã")

            # –í–≤–æ–¥ email (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω)
            
            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").clear()
            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").send_keys(QWART_EMAIL)
            driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").clear()
            driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").send_keys(QWART_EMAIL)
            print("–≤–≤–æ–¥ email")
            time.sleep(1)

            # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å ‚Äî React Select
            element = driver.find_element("xpath", "(//div[text()='–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å'])[1]")
            driver.execute_script("arguments[0].click();", element)
            print("\n", "\t", "–æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∞–¥—Ä–µ—Å–∞")
            time.sleep(5)

            react_input = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located(("xpath", "//input[@id='react-select-3-input']"))
            )
            react_input.send_keys(MIN_ADDRESS) 
            time.sleep(3)
            react_input.send_keys(Keys.ARROW_DOWN)
            time.sleep(2)
            react_input.send_keys(Keys.ENTER)
            print("–Ω–∞—à–µ–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∞–¥—Ä–µ—Å")
            time.sleep(2)

            driver.find_element("xpath", "(//button[text()='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'])[1]").click()
            print("—Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞–¥—Ä–µ—Å—Å")
            time.sleep(2)

            # –í–≤–æ–¥ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–¥–æ–∫—É–º–µ–Ω—Ç—ã, —Ñ–∞–π–ª—ã)
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys("–ò–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")
            time.sleep(1)
            print("–≤–≤–µ–ª —Ç–µ–∫—Å—Ç")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ARROW_DOWN)
            print("—Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑")
            time.sleep(1)
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ENTER)
            print("—ç–Ω—Ç–µ—Ä")
            time.sleep(1)
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentNumber']").send_keys("583-p")
            time.sleep(1)
            print("–≤–≤–µ–ª –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentIssueDate']").send_keys("23.12.2024")
            time.sleep(1)
            print("–≤–≤–µ–ª –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.issuingAuthority']").send_keys(ISSUING_AUTHORITY)
            time.sleep(1)
            print("\t –≤–≤–µ–ª –∫–µ–º –≤—ã–¥–∞–Ω")

            driver.find_element("xpath", "(//input[@type='file'])[1]").send_keys(file_path)
            time.sleep(15)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª 1")
            driver.find_element("xpath", "(//input[@type='file'])[2]").send_keys(file_signature)
            time.sleep(15)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª 2")

            # –í–≤–æ–¥ cadastralBlockNumber –∏–∑ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Ñ–∞–π–ª–∞
            driver.find_element("xpath", "//input[@id='cadastralBlockNumber']").clear()
            driver.find_element("xpath", "//input[@id='cadastralBlockNumber']").send_keys(line)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª –∫–∞–¥–∞—Å—Ç—Är")
            time.sleep(1)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ email –∏ –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            driver.find_element("xpath", "//input[@id='deliveryActionEmail']").clear()
            driver.find_element("xpath", "//input[@id='deliveryActionEmail']").send_keys(QWART_EMAIL)
            print("email")
            time.sleep(1)

            # –ö–Ω–æ–ø–∫–∏ –î–∞–ª–µ–µ –∏ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            BUTTON_FURTHER = ("xpath", "//button[text()='–î–∞–ª–µ–µ']")
            wait.until(EC.element_to_be_clickable(BUTTON_FURTHER)).click()
            time.sleep(5)
            print("–ø–µ—Ä–≤–∞—è –î–∞–ª–µ–µ")
            wait.until(EC.visibility_of_element_located(BUTTON_FURTHER))
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(BUTTON_FURTHER)).click()
            time.sleep(2)
            print("–≤—Ç–æ—Ä–∞—è –î–∞–ª–µ–µ")
            wait.until(EC.visibility_of_element_located(("xpath", "//span[@class='certificate-selector__list-option']"))).click()
            print("–≤—ã–±—Ä–∞–ª")
            time.sleep(1)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()='–í—ã–±—Ä–∞—Ç—å']"))).click()
            print("—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –¥–∞–ª–µ–µ")
            wait.until(EC.visibility_of_element_located(("xpath", "//div[text()='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ–¥–æ–º—Å—Ç–≤–æ']")))
            save_selenium_note(driver, line)
            time.sleep(10)

print("end code")
driver.quit()