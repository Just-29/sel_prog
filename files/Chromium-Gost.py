import os
import time

from selenium.common.exceptions import ElementClickInterceptedException, TimeoutException
from datetime import datetime
from pathlib import Path
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver import Keys

from config import *

# //div[@class='rros-ui-lib-errors'] –¥–∏–≤ –æ—à–∏–±–æ–∫
# //button[@class='rros-ui-lib-button rros-ui-lib-button--link'] –∫—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–µ
# –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chrome –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
os.system('taskkill /f /im chrome.exe 2>nul')
os.system('taskkill /f /im chromedriver.exe 2>nul')
time.sleep(2)

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ webdriver-manager
os.environ['WDM_LOG_LEVEL'] = '0'

chrome_options = Options()
chrome_options.binary_location = CHROME_PATH

# –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏—é, —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
chrome_options.add_argument(F"--user-data-dir={CHROME_PROFILE_PATH}")
chrome_options.add_argument("--profile-directory=Default")

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
chrome_options.add_argument("--log-level=0")
chrome_options.add_argument("--disable-logging")
chrome_options.add_experimental_option("excludeSwitches", ["enable-logging"])


service = Service(
    executable_path=DRIVER_PATH,
    log_path='NUL'  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏ ChromeDriver –≤ –Ω–∏–∫—É–¥–∞
)

driver = webdriver.Chrome(service=service, options=chrome_options)

wait = WebDriverWait(driver, 1000, poll_frequency=1)


script_dir = Path(__file__).parent
file_path = os.path.join(script_dir, "uploads", PDF_FILE_NAME)
file_signature = os.path.join(script_dir, "uploads", SIGNATURE_FILE_NAME)
uploads_file_dir = script_dir / "uploads" / "uploads_files"

def wait_for_file_upload_by_title(driver, file_path):
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        driver.find_element("xpath", "(//input[@type='file'])[3]").send_keys(str(file_path))
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        wait.until(
            EC.presence_of_element_located(("xpath", 
                f"//span[contains(@title, '{file_path.name}') and contains(@class, 'rros-ui-lib-file-upload__item__name')]"))
        )
        print(f"‚úÖ –§–∞–π–ª {file_path.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        time.sleep(2)

        apply_button_xpath = "//button[contains(@class, 'my-objects-modal__selected-btn') and contains(@class, 'rros-ui-lib-button--primary') and text()='–ü—Ä–∏–º–µ–Ω–∏—Ç—å']"
        
        print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å'...")
        
        try:
            wait.until(EC.presence_of_element_located(("xpath", "//h3[text()='–ü–æ–∏—Å–∫ —Å—Ä–µ–¥–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏']")))
            confirm_button = wait.until(
                EC.element_to_be_clickable(("xpath", apply_button_xpath))
            )
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å' –Ω–∞–π–¥–µ–Ω–∞ –∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞")
            
            # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ JavaScript
            driver.execute_script("arguments[0].click();", confirm_button)
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ JavaScript")
            
            # –ñ–¥–µ–º –ó–ê–ö–†–´–¢–ò–Ø –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ - —ç—Ç–æ –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...")
            try:
                # –ñ–¥–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                wait.until(EC.invisibility_of_element_located(("xpath", "//div[contains(@class, 'rros-ui-lib-modal__window')]")))
                print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
                return False  # –£—Å–ø–µ—Ö
                
            except Exception as e:
                print(f"‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {e}")
                
                # –ü—Ä–æ–±—É–µ–º –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ä—É—á–Ω—É—é
                print("üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ä—É—á–Ω—É—é...")
                if close_modal_window(driver):
                    print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –≤—Ä—É—á–Ω—É—é")
                    return False  # –£—Å–ø–µ—Ö
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ")
                    return True  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
                
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–ü—Ä–∏–º–µ–Ω–∏—Ç—å': {e}")
            return True

    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")
        return True

def close_modal_window(driver):
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–µ—à–∞—é—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞"""
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–∫—Ä—ã—Ç–∏—è
        
        # –°–ø–æ—Å–æ–± 1: –ö—Ä–µ—Å—Ç–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_buttons = driver.find_elements("xpath", "//button[contains(@class, 'rros-ui-lib-modal__close-btn')]")
        if close_buttons:
            driver.execute_script("arguments[0].click();", close_buttons[0])
            print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –∫—Ä–µ—Å—Ç–∏–∫")
            time.sleep(2)
            return True
            
        # –°–ø–æ—Å–æ–± 2: –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ "–ó–∞–∫—Ä—ã—Ç—å"
        cancel_buttons = driver.find_elements("xpath", "//button[contains(text(), '–û—Ç–º–µ–Ω–∞') or contains(text(), '–ó–∞–∫—Ä—ã—Ç—å') or contains(text(), 'Cancel')]")
        if cancel_buttons:
            driver.execute_script("arguments[0].click();", cancel_buttons[0])
            print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã")
            time.sleep(2)
            return True
            
        # –°–ø–æ—Å–æ–± 3: ESC —á–µ—Ä–µ–∑ JavaScript
        driver.execute_script("document.dispatchEvent(new KeyboardEvent('keydown', {'key': 'Escape'}));")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω ESC —á–µ—Ä–µ–∑ JavaScript")
        time.sleep(2)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫—Ä—ã–ª–æ—Å—å –ª–∏ –æ–∫–Ω–æ
        if not driver.find_elements("xpath", "//div[contains(@class, 'rros-ui-lib-modal__window')]"):
            return True
        else:
            print("‚ö†Ô∏è ESC –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
        return False



def save_selenium_note(driver, message, screenshot=False):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–º–µ—Ç–∫—É –¥–ª—è Selenium —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"""
    notes_dir = Path(__file__).parent / "selenium_notes"
    notes_dir.mkdir(exist_ok=True)
    
    # –¢–µ–∫—Å—Ç–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞
    note_file = notes_dir / "actions.log"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    with open(note_file, 'a', encoding='utf-8') as f:
        f.write(f"[{timestamp}] {message}\n")

def login_funct(driver):
    wait = WebDriverWait(driver, 15)
    driver.get("https://lk.rosreestr.ru/my-applications")
    try:
        if wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ']"))):
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –≠–ª. –ø–æ–¥–ø–∏—Å—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[contains(., '–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê')]"))).click()
            print("\n", "\t", "–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ö–•")
            time.sleep(10)
            wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
            print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            time.sleep(5)
    except:
        driver.get("https://lk.rosreestr.ru/my-applications")
        print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–æ—Å—Ä–µ–µ—Å—Ç—Ä–∞")
        wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
        print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        time.sleep(5)

def fill_address_with_retry(max_retries=3):
    for attempt in range(max_retries):
        try:
            element = wait.until(EC.element_to_be_clickable(("xpath", "//input[@id='react-select-3-input']")))
            
            # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
            element.clear()
            time.sleep(0.5)
            
            # –Ø–≤–Ω—ã–π –∫–ª–∏–∫ –∏ —Ñ–æ–∫—É—Å
            element.click()
            driver.execute_script("arguments[0].focus();", element)
            time.sleep(0.5)
            
            # –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π –≤–≤–æ–¥
            for char in MIN_ADDRESS:
                element.send_keys(char)
                time.sleep(0.1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω
            actual_value = element.get_attribute('value')
            if actual_value == MIN_ADDRESS:
                print(f"–£—Å–ø–µ—à–Ω–æ –≤–≤–µ–¥–µ–Ω –∞–¥—Ä–µ—Å: {MIN_ADDRESS}")
                return True
            else:
                print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}: –æ–∂–∏–¥–∞–ª–æ—Å—å '{MIN_ADDRESS}', –ø–æ–ª—É—á–µ–Ω–æ '{actual_value}'")
                continue
                
        except Exception as e:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            time.sleep(1)
    
    return False


login_funct(driver)

#driver.set_window_size(300, 300)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–æ–≤
for upload_file in uploads_file_dir.iterdir():
    flag_download_CSV_file = False
    while flag_download_CSV_file == False:

        if upload_file.is_file() and upload_file.suffix.lower() == '.csv':
            print(f"\nüìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {upload_file.name}")

            driver.get("https://lk.rosreestr.ru/eservices/request-info-from-egrn/real-estate-object-or-its-rightholder")
            print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ –ø–æ –ï–ì–†–ù")
            time.sleep(10)
            wait.until(EC.presence_of_element_located(("xpath", "//input[@id='applicantCategory']")))
            scroll_category = driver.find_element("xpath", "//input[@id='applicantCategory']")
            scroll_category.send_keys("–ò–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º")
            time.sleep(1)
            print("–≤–≤–µ–ª –∏–Ω—ã–µ...")
            scroll_category.send_keys(Keys.ARROW_DOWN)
            time.sleep(1)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Ç—Ä–µ–ª–∫—É")
            scroll_category.send_keys(Keys.ENTER)
            time.sleep(1)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª —ç–Ω—Ç–µ—Ä")

            print("dropdown 1")
            time.sleep(0.3)
            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].regDate']").send_keys(DOCUMENT_DATE)
            print("\n", "\t", "–≤–≤–æ–¥ –¥–∞—Ç—ã")

            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").clear()
            driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").send_keys(EMAIL)
            driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").clear()
            driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").send_keys(EMAIL)
            driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").clear()
            driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").send_keys(EMAIL)
            print("–≤–≤–æ–¥ email")
            time.sleep(1)
            print("–≤—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞")



            element = driver.find_element("xpath", "(//div[text()='–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å'])[1]")
            driver.execute_script("arguments[0].click();", element)

            print("\n", "\t", "–æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∞–¥—Ä–µ—Å–∞")
            time.sleep(5)

            try:
                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
                wait.until(EC.visibility_of_element_located(("xpath", "//input[@id='react-select-3-input']")))
                if fill_address_with_retry():
                    for _ in range(3):
                        element.send_keys(Keys.ARROW_DOWN)
                        time.sleep(1)
                    element.send_keys(Keys.ENTER)
                    print("–Ω–∞—à–µ–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∞–¥—Ä–µ—Å")
                else:
                    raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–µ –∞–¥—Ä–µ—Å–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫")        

            except Exception as e:
                driver.save_screenshot(f'{upload_file.name}error.png') 
                print(f'–û—à–∏–±–∫–∞: {e}') 
                exit(1)

            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys("–ò–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")
            time.sleep(1)
            print("–≤–≤–µ–ª —Ç–µ–∫—Å—Ç")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ARROW_DOWN)
            print("—Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑")
            time.sleep(1)
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ENTER)
            print("—ç–Ω—Ç–µ—Ä")
            time.sleep(1)

            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentNumber']").send_keys(DOCUMENT_NUMBER)
            time.sleep(1)
            print("–≤–≤–µ–ª –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentIssueDate']").send_keys(DOCUMENT_DATE)
            time.sleep(1)
            print("–≤–≤–µ–ª –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.issuingAuthority']").send_keys(ISSUING_AUTHORITY)
            time.sleep(1)
            print("\t –≤–≤–µ–ª –∫–µ–º –≤—ã–¥–∞–Ω")

            SCROL_VIPISKA = ("xpath", "//input[@id='react-select-6-input']")
            driver.find_element(*SCROL_VIPISKA).send_keys("–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–¥–∏–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª")
            time.sleep(1)
            driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ARROW_DOWN)
            print("–°–¢–†–ï–õ–ö–ê")
            time.sleep(1)
            driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ENTER)
            print("—ç–Ω—Ç–µ—Ä")
            time.sleep(1)


            # —Ñ–∞–π–ª
            driver.find_element("xpath", "(//input[@type='file'])[1]").send_keys(file_path)
            time.sleep(15)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª 1")
            # —Ñ–∞–π–ª
            driver.find_element("xpath", "(//input[@type='file'])[2]").send_keys(file_signature)
            time.sleep(15)
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª 2")

            # —Ñ–∞–π–ª csv
            loading_flag = True
            attempt = 0
            max_attempts = 5

            while loading_flag and attempt < max_attempts:
                attempt += 1
                print(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV {attempt}/{max_attempts}")

                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
                loading_flag = wait_for_file_upload_by_title(driver, upload_file)

                # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ True (–Ω–µ—É–¥–∞—á–∞), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—á–∏—Å—Ç–∫—É
                if loading_flag:
                    print("üîÑ –û—á–∏—â–∞–µ–º –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞...")

                    # –ñ–î–ï–ú –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ wait
                    try:
                        print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ '–£–¥–∞–ª–∏—Ç—å'...")
                        delete_button = wait.until(
                            EC.element_to_be_clickable(("xpath", "//button[contains(@class, 'csv-control__btn-del') and contains(., '–£–¥–∞–ª–∏—Ç—å')]"))
                        )
                        delete_button.click()
                        print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–£–¥–∞–ª–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")

                        # –ñ–¥–µ–º –ø–æ–∫–∞ —Ñ–∞–π–ª —É–¥–∞–ª–∏—Ç—Å—è (–∏—Å—á–µ–∑–Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞)
                        try:
                            wait.until(EC.invisibility_of_element_located(("xpath", 
                                f"//span[contains(@title, '{upload_file.name}') and contains(@class, 'rros-ui-lib-file-upload__item__name')]")))
                            print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
                        except:
                            print("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∏—Å—á–µ–∑ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")

                    except Exception as e:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–£–¥–∞–ª–∏—Ç—å': {e}")

                    if loading_flag and attempt < max_attempts:
                        print("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
                        time.sleep(3)


                else:
                    # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                    if loading_flag and attempt < max_attempts:
                        print("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
                        time.sleep(3)




            SCROL_VIPISKA = ("xpath", "//input[@id='react-select-6-input']")
            driver.find_element(*SCROL_VIPISKA).send_keys("–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–¥–∏–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
            print("–æ—Ç–ø—Ä–∞–≤–∏–ª")
            time.sleep(1)
            driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ARROW_DOWN)
            print("–°–¢–†–ï–õ–ö–ê")
            time.sleep(1)
            driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ENTER)
            print("—ç–Ω—Ç–µ—Ä")
            time.sleep(1)

            try:
                wait.until(EC.presence_of_element_located(("xpath", "//div[text()='–î–æ–±–∞–≤–ª–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ CSV-—Ñ–∞–π–ª–∞:']")))
                print("‚úÖ CSV-—Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É")

            except:
                print("‚ùå CSV-—Ñ–∞–π–ª –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 300 —Å–µ–∫—É–Ω–¥")

        time.sleep(2)

        BUTTON_FURTHER = ("xpath", "//button[text()='–î–∞–ª–µ–µ']")
        wait.until(EC.element_to_be_clickable(BUTTON_FURTHER)).click()
        time.sleep(5)
        print("–ø–µ—Ä–≤–∞—è –î–∞–ª–µ–µ")
        wait.until(EC.visibility_of_element_located(BUTTON_FURTHER))
        time.sleep(5)
        wait.until(EC.element_to_be_clickable(BUTTON_FURTHER)).click()
        time.sleep(2)
        print("–≤—Ç–æ—Ä–∞—è –î–∞–ª–µ–µ")
        wait.until(EC.visibility_of_element_located(("xpath", "//span[@class='certificate-selector__list-option']"))).click()
        print("–≤—ã–±—Ä–∞–ª")
        time.sleep(1)
        wait.until(EC.visibility_of_element_located(("xpath", "//button[text()='–í—ã–±—Ä–∞—Ç—å']"))).click()
        print("—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –¥–∞–ª–µ–µ")
        try:
            wait.until(EC.visibility_of_element_located(("xpath", "//div[text()='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ–¥–æ–º—Å—Ç–≤–æ']")))
            save_selenium_note(driver, f"–£–°–ü–ï–•‚úå: –§–∞–π–ª {upload_file} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            flag_download_CSV_file = True
            time.sleep(10)
        except Exception as e:
            save_selenium_note(driver, f"–û–®–ò–ë–ö–êüí•: –§–∞–π–ª {upload_file} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω - {type(e).__name__}: {str(e)}")
            time.sleep(10)
    
print("end code")
driver.quit()

