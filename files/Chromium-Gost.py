import os
import time


from datetime import datetime
from pathlib import Path
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver import Keys




# –ü—É—Ç–∏
DRIVER_PATH = r"C:\Selenium\files\chromedriver-win64\chromedriver.exe"
CHROME_PATH = r"C:\Users\David\AppData\Local\Chromium\Application\chrome.exe"

# –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chrome –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
os.system('taskkill /f /im chrome.exe 2>nul')
os.system('taskkill /f /im chromedriver.exe 2>nul')
time.sleep(2)

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ webdriver-manager
os.environ['WDM_LOG_LEVEL'] = '0'

chrome_options = Options()
chrome_options.binary_location = CHROME_PATH



# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
chrome_options.add_argument("--log-level=0")
chrome_options.add_argument("--disable-logging")
chrome_options.add_experimental_option("excludeSwitches", ["enable-logging"])


service = Service(
    executable_path=DRIVER_PATH,
    log_path='NUL'  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏ ChromeDriver –≤ –Ω–∏–∫—É–¥–∞
)

driver = webdriver.Chrome(service=service, options=chrome_options)

wait = WebDriverWait(driver, 300, poll_frequency=1)


script_dir = Path(__file__).parent
file_path = os.path.join(script_dir, "uploads", "–•–∞–¥–∏–∫–æ–≤.pdf")
file_signature = os.path.join(script_dir, "uploads", "–•–∞–¥–∏–∫–æ–≤.pdf.sig")
uploads_file_dir = script_dir / "uploads" / "uploads_files"

def wait_for_file_upload_by_title(driver, file_path, timeout=350):
    try:
        driver.find_element("xpath", "(//input[@type='file'])[3]").send_keys(str(file_path))
        
        WebDriverWait(driver, timeout).until(
            EC.presence_of_element_located(("xpath", 
                f"//span[contains(@title, '{file_path.name}') and contains(@class, 'rros-ui-lib-file-upload__item__name')]"))
        )
        print(f"‚úÖ –§–∞–π–ª {file_path.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        time.sleep(1)
        
        # JavaScript –∫–ª–∏–∫ –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ
        close_buttons = driver.find_elements("xpath", "//button[contains(@class, 'rros-ui-lib-modal__close-btn')]")
        if close_buttons:
            driver.execute_script("arguments[0].click();", close_buttons[0])
            print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ JavaScript")
        else:
            print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        return False
        
    except Exception as e:
        print(f"‚ùå –§–∞–π–ª {file_path.name} –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è: {e}")
        return True
    
def handle_apply_button(driver):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        apply_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable(("xpath", "//button[text()='–ü—Ä–∏–º–µ–Ω–∏—Ç—å']"))
        )
        apply_button.click()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")
        return True
    except Exception as e:
        print(f"‚ùå –ö–Ω–æ–ø–∫–∞ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {e}")
        return False

def save_selenium_note(driver, message, screenshot=False):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–º–µ—Ç–∫—É –¥–ª—è Selenium —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"""
    notes_dir = Path(__file__).parent / "selenium_notes"
    notes_dir.mkdir(exist_ok=True)
    
    # –¢–µ–∫—Å—Ç–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞
    note_file = notes_dir / "actions.log"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    with open(note_file, 'a', encoding='utf-8') as f:
        f.write(f"[{timestamp}] {message}\n")

def login_funct(driver):
    wait = WebDriverWait(driver, 5)
    driver.get("https://lk.rosreestr.ru/my-applications")
    try:
        if wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ']"))):
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –≠–ª. –ø–æ–¥–ø–∏—Å—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[text()=' –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ']"))).click()
            print("\n", "\t", "–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            time.sleep(5)
            wait.until(EC.visibility_of_element_located(("xpath", "//button[contains(., '–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê')]"))).click()
            print("\n", "\t", "–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ö–•")
            time.sleep(10)
            wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
            print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            time.sleep(5)
    except:
        driver.get("https://lk.rosreestr.ru/my-applications")
        print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–æ—Å—Ä–µ–µ—Å—Ç—Ä–∞")
        wait.until(EC.visibility_of_element_located(("xpath", "//span[text()='–ú–ò–ù–ò–°–¢–ï–†–°–¢–í–û –ñ–ò–õ–ò–©–ù–û-–ö–û–ú–ú–£–ù–ê–õ–¨–ù–û–ì–û –•–û–ó–Ø–ô–°–¢–í–ê, –¢–û–ü–õ–ò–í–ê –ò –≠–ù–ï–†–ì–ï–¢–ò–ö–ò –†–ï–°–ü–£–ë–õ–ò–ö–ò –°–ï–í–ï–†–ù–ê–Ø –û–°–ï–¢–ò–Ø-–ê–õ–ê–ù–ò–Ø']"))).click()
        print("\n", "\t", "–≤—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        time.sleep(5)


login_funct(driver)

#driver.set_window_size(300, 300)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–æ–≤
for upload_file in uploads_file_dir.iterdir():
    if upload_file.is_file() and upload_file.suffix.lower() == '.csv':
        print(f"\nüìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {upload_file.name}")
        
        driver.get("https://lk.rosreestr.ru/eservices/request-info-from-egrn/real-estate-object-or-its-rightholder")
        print("\n", "\t", "–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ –ø–æ –ï–ì–†–ù")
        time.sleep(10)
        #SCROLL_CATEGORY = ("xpath", "//input[@id='applicantCategory']")
        scroll_category = driver.find_element("xpath", "//input[@id='applicantCategory']")
        scroll_category.send_keys("–ò–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º")
        time.sleep(1)
        print("–≤–≤–µ–ª –∏–Ω—ã–µ...")
        scroll_category.send_keys(Keys.ARROW_DOWN)
        time.sleep(1)
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Ç—Ä–µ–ª–∫—É")
        scroll_category.send_keys(Keys.ENTER)
        time.sleep(1)
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª —ç–Ω—Ç–µ—Ä")

        print("dropdown 1")
        time.sleep(0.3)
        driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].regDate']").send_keys("23.12.2024")
        print("\n", "\t", "–≤–≤–æ–¥ –¥–∞—Ç—ã")

        email = "eirc_trashbox@inbox.ru"
        driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").clear()
        driver.find_element("xpath", "//input[@id='rorganizationOrGovernmentArray[0].email']").send_keys(email)
        driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").clear()
        driver.find_element("xpath", "//input[@id='fullNameDocumentAndAdditionalInformationArray[0].email']").send_keys(email)
        driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").clear()
        driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").send_keys(email)
        print("–≤–≤–æ–¥ email")
        time.sleep(1)
        print("–≤—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞")

        
        
        element = driver.find_element("xpath", "(//div[text()='–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å'])[1]")
        driver.execute_script("arguments[0].click();", element)

        print("\n", "\t", "–æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∞–¥—Ä–µ—Å–∞")
        time.sleep(5)

        element = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located(("xpath", "//input[@id='react-select-3-input']")))
        element.send_keys("–†–µ—Å–ø. –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è - –ê–ª–∞–Ω–∏—è, –≥. –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑, —É–ª. –ê—Ä–º—è–Ω—Å–∫–∞—è, –¥.30 –∫–æ—Ä–ø.1")
        time.sleep(3)
        element.send_keys(Keys.ARROW_DOWN)
        time.sleep(2)
        driver.find_element("xpath", "//input[@id='react-select-3-input']").send_keys(Keys.ENTER)
        print("–Ω–∞—à–µ–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∞–¥—Ä–µ—Å—Å")
        time.sleep(2)
        driver.find_element("xpath", "(//button[text()='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'])[1]").click()
        print("—Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞–¥—Ä–µ—Å—Å") 
        time.sleep(2)

        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys("–ò–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç")
        time.sleep(1)
        print("–≤–≤–µ–ª —Ç–µ–∫—Å—Ç")
        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ARROW_DOWN)
        print("—Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑")
        time.sleep(1)
        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentType']").send_keys(Keys.ENTER)
        print("—ç–Ω—Ç–µ—Ä")
        time.sleep(1)

        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentNumber']").send_keys("583-p")
        time.sleep(1)
        print("–≤–≤–µ–ª –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.documentIssueDate']").send_keys("23.12.2024")
        time.sleep(1)
        print("–≤–≤–µ–ª –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        driver.find_element("xpath", "//input[@id='userAuthorityConfirmationDocument.issuingAuthority']").send_keys("–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è - –ê–ª–∞–Ω–∏—è")
        time.sleep(1)
        print("\t –≤–≤–µ–ª –∫–µ–º –≤—ã–¥–∞–Ω")

        SCROL_VIPISKA = ("xpath", "//input[@id='react-select-6-input']")
        driver.find_element(*SCROL_VIPISKA).send_keys("–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–¥–∏–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª")
        time.sleep(1)
        driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ARROW_DOWN)
        print("–°–¢–†–ï–õ–ö–ê")
        time.sleep(1)
        driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ENTER)
        print("—ç–Ω—Ç–µ—Ä")
        time.sleep(1)


        # —Ñ–∞–π–ª
        driver.find_element("xpath", "(//input[@type='file'])[1]").send_keys(file_path)
        time.sleep(15)
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª 1")
        # —Ñ–∞–π–ª
        driver.find_element("xpath", "(//input[@type='file'])[2]").send_keys(file_signature)
        time.sleep(15)
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª 2")
        
        # —Ñ–∞–π–ª csv
        loading_flag = True
        attempt = 0
        max_attempts = 5

        while loading_flag and attempt < max_attempts:
            attempt += 1
            print(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV {attempt}/{max_attempts}")

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
            loading_flag = wait_for_file_upload_by_title(driver, upload_file)

            # –ü–†–û–í–ï–†–Ø–ï–ú –æ—à–∏–±–∫—É –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
            error_element1 = driver.find_elements("xpath", "//div[text()='–û–±—ä–µ–∫—Ç—ã –∏–∑ CSV –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∑–∞—è–≤–ª–µ–Ω–∏–µ']")
            error_element2 = driver.find_elements("xpath", "//*[contains(text(), '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤')]")

            if error_element1:
                print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞: –û–±—ä–µ–∫—Ç—ã –∏–∑ CSV –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∑–∞—è–≤–ª–µ–Ω–∏–µ")
                # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
                loading_flag = True
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –æ—à–∏–±–∫–∏
                try:
                    close_buttons = driver.find_elements("xpath", "//button[contains(@class, 'close')] | //button[contains(text(), '–ó–∞–∫—Ä—ã—Ç—å')] | //button[@aria-label='Close']")
                    delete_button = driver.find_elements("xpath", "//span[@data-test-id='FileUpload.delete']")
                    if close_buttons:
                        close_buttons[0].click()
                        if delete_button:
                            delete_button[0].click()
                    else:
                        driver.find_element("xpath", "(//button[@class='rros-ui-lib-modal__close-btn'])[1]").click()
                except:
                    pass
            if error_element2:
                print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞: —Å–∞–π—Ç—É –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ CSV")
                # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
                loading_flag = True
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –æ—à–∏–±–∫–∏
                try:
                    close_buttons = driver.find_elements("xpath", "//button[contains(@class, 'close')] | //button[contains(text(), '–ó–∞–∫—Ä—ã—Ç—å')] | //button[@aria-label='Close']")
                    delete_button = driver.find_elements("xpath", "//span[@data-test-id='FileUpload.delete']")
                    if close_buttons:
                        close_buttons[0].click()
                        if delete_button:
                            delete_button[0].click()
                    else:
                        driver.find_element("xpath", "(//button[@class='rros-ui-lib-modal__close-btn'])[1]").click()
                except:
                    pass

    if loading_flag and attempt < max_attempts:
        print("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
        time.sleep(5)


        SCROL_VIPISKA = ("xpath", "//input[@id='react-select-6-input']")
        driver.find_element(*SCROL_VIPISKA).send_keys("–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–¥–∏–Ω–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")
        print("–æ—Ç–ø—Ä–∞–≤–∏–ª")
        time.sleep(1)
        driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ARROW_DOWN)
        print("–°–¢–†–ï–õ–ö–ê")
        time.sleep(1)
        driver.find_element(*SCROL_VIPISKA).send_keys(Keys.ENTER)
        print("—ç–Ω—Ç–µ—Ä")
        time.sleep(1)
        driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").clear()
        driver.find_element("xpath", "//input[@id='requestAboutObject.deliveryActionEmail']").send_keys(email)
        print("email")
        time.sleep(1)

        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ü—Ä–∏–º–µ–Ω–∏—Ç—å
        handle_apply_button(driver)
        
        time.sleep(1)
        input("enter")
        
        try:
            driver.find_element("xpath", "//button[text()='–î–∞–ª–µ–µ']").click()
            time.sleep(1)
            driver.find_element("xpath", "//button[text()='–î–∞–ª–µ–µ']").click()
            print("‚úÖ –û–±–∞ —à–∞–≥–∞ '–î–∞–ª–µ–µ' –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ '–î–∞–ª–µ–µ': {e}")
        
        time.sleep(180)
    
    try:
        wait.until(EC.presence_of_element_located(("xpath", "//div[text()='–î–æ–±–∞–≤–ª–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ CSV-—Ñ–∞–π–ª–∞:']")))
        print("‚úÖ CSV-—Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É")
    
    except:
        print("‚ùå CSV-—Ñ–∞–π–ª –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 120 —Å–µ–∫—É–Ω–¥")
    

    BUTTON_FURTHER = ("xpath", "//button[text()='–î–∞–ª–µ–µ']")
    wait.until(EC.element_to_be_clickable(BUTTON_FURTHER)).click()
    time.sleep(5)
    print("–ø–µ—Ä–≤–∞—è –î–∞–ª–µ–µ")
    wait.until(EC.visibility_of_element_located(BUTTON_FURTHER))
    time.sleep(5)
    wait.until(EC.visibility_of_element_located(BUTTON_FURTHER)).click()
    time.sleep(2)
    print("–≤—Ç–æ—Ä–∞—è –î–∞–ª–µ–µ")
    wait.until(EC.visibility_of_element_located(("xpath", "//span[@class='certificate-selector__list-option']"))).click()
    print("–≤—ã–±—Ä–∞–ª")
    time.sleep(1)
    wait.until(EC.visibility_of_element_located(("xpath", "//button[text()='–í—ã–±—Ä–∞—Ç—å']"))).click()
    print("—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –¥–∞–ª–µ–µ")
    wait.until(EC.visibility_of_element_located(("xpath", "//div[text()='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ–¥–æ–º—Å—Ç–≤–æ']")))
    save_selenium_note(driver, upload_file)
    time.sleep(10)

print("end code")
driver.quit()

